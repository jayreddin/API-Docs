{
  "markdown": "[Skip to main content](https://dragselect.com/docs/API/Events#__docusaurus_skipToContent_fallback)\n\nOn this page\n\n# Events (Pub/sub)\n\nDragSelect follows a PubSub pattern. It will emit useful events you can subscribe to like this:\n\n```codeBlockLines_AclH\nconst ds = new DragSelect({});\nds.subscribe('<event_name>', (callback_object) => {})\n\n```\n\n## Public Events [​](https://dragselect.com/docs/API/Events\\#public-events \"Direct link to Public Events\")\n\n| event\\_name | callback\\_object | description |\n| --- | --- | --- |\n| `DS:end` | { items, event, isDragging, isDraggingKeyboard, dropTarget, … } | Fired after the selection (i.e. on mouse-up). |\n| `DS:start` | { items, event, isDragging, isDraggingKeyboard, … } | Fired when the selection starts (i.e. on mouse-down). |\n| `DS:update` | { items, event, isDragging, isDraggingKeyboard, … } | Fired when the mouse moves while dragging (i.e. on mouse-move). |\n| `DS:scroll` | { items, isDragging, scroll\\_directions, scroll\\_multiplier, … } | Fired when the area is auto-scrolled (i.e. cursor on a corner of the area). |\n| `DS:select` | { items, item, isDragging, …} | Fired when an element is added to the selection. |\n| `DS:unselect` | { items, item, isDragging, … } | Fired when an element is removed from the selection. |\n| `DS:added` | { items, item, isDragging, … } | Fired when an element is added from the list of selectable elements. |\n| `DS:removed` | { items, item, isDragging, … } | Fired when an element is removed from the list of selectable elements. |\n\n> Note: all your callbacks subscribers will run after the internal code ran. If you want to run something before everything else, use the `:pre` postfix. I.e. `DS:start:pre` is an event that runs before any internal start logic.\n\n> Note: there are way more so called \"internal events\" but hooking to those is not recommended since they might change in future and break your implementation.\n\n## Callback Object [​](https://dragselect.com/docs/API/Events\\#callback-object \"Direct link to Callback Object\")\n\nThe callback object is made up of different parts depending of the event. All properties are not guaranteed so it is important to check for their availability before using them. I.e. like this:\n\n```codeBlockLines_AclH\nconst ds = new DragSelect({});\nds.subscribe('DS:end', (callback_object) => {\n  if(callback_object.items) {\n    // do something with the items\n  }\n})\n\n```\n\n| callback\\_object\\_keys | type | description |\n| --- | --- | --- |\n| `event` | MouseEvent \\| TouchEvent \\| KeyboardEvent \\| any | The native browser event, the type is depending on the situational context |\n| `items` | \\[ HTMLElement \\| SVGElement \\| any \\] | Current selected elements |\n| `item` | HTMLElement \\| SVGElement \\| any | The single element currently being interacted with if any |\n| `isDragging` | boolean | If true, the user is dragging the selected elements, if false the user is selecting |\n| `isDraggingKeyboard` | boolean | If true, the user is dragging the selected elements with the keyboard |\n| `scroll_directions` | \\[ 'top' \\| 'bottom' \\| 'left' \\| 'right' \\| undefined \\] | The direction in which the event is happening (i.e. scroll direction) |\n| `scroll_multiplier` | number | The scrolling speed |\n| `dropTarget` | { <br>`id`: string,<br>`element`: HTMLElement \\| SVGElement \\| any,<br>`droppables`: \\[ HTMLElement \\| SVGElement \\| any \\],<br>`itemsDropped`: \\[ HTMLElement \\| SVGElement \\| any \\],<br>`itemsInside`: \\[ HTMLElement \\| SVGElement \\| \\\\* \\]<br>} | dropZone in which the droppable elements were dropped into. `id`: is the identifier string of the zone. `droppables`: the elements that are assigned to this zone. `itemsDropped`: all items that were dropped on the target. `itemsInside`: all items that are within the bounds of the zone |\n| `key` | string | Pressed key (lowercase) |\n| `settings` | [Settings](https://dragselect.com/docs/API/Settings) | The settings being updates/manipulated/passed, also holds the previous value. i.e. updating selectorClass will publish { settings: { selectorClass: 'newVal', 'selectorClass:pre': 'oldVal' } } |\n\n> Note: all object keys are optional and might not be available, depending on the event type. So make sure to check for availability first\n\n- [Public Events](https://dragselect.com/docs/API/Events#public-events)\n- [Callback Object](https://dragselect.com/docs/API/Events#callback-object)",
  "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-2b04afc5-0d23-484c-9beb-af52cd3155c1.png",
  "metadata": {
    "ogImage": "https://DragSelect.com/img/dragselect-logo-bg.png",
    "author": "Thibault Jan Beyer",
    "docsearch:version": "current",
    "og:image": "https://DragSelect.com/img/dragselect-logo-bg.png",
    "viewport": "width=device-width, initial-scale=1.0",
    "title": "Events (Pub/sub) | DragSelect",
    "ogUrl": "https://DragSelect.com/docs/API/Events",
    "ogDescription": "DragSelect Events (API)",
    "favicon": "https://dragselect.com/img/favicon.ico",
    "twitter:card": "summary_large_image",
    "language": "en",
    "keywords": "javascript, npm, drag-and-drop, drag, selection, dragselect, drag-n-drop, drag-selection, drag-select, drag-selection library, open source, free",
    "docusaurus_version": "current",
    "ogTitle": "Events (Pub/sub) | DragSelect",
    "description": "DragSelect Events (API)",
    "generator": "Docusaurus v2.4.3",
    "og:description": "DragSelect Events (API)",
    "og:title": "Events (Pub/sub) | DragSelect",
    "twitter:image": "https://DragSelect.com/img/dragselect-logo-bg.png",
    "docsearch:docusaurus_tag": "docs-default-current",
    "docusaurus_tag": "docs-default-current",
    "position": [
      "1",
      "2"
    ],
    "docusaurus_locale": "en",
    "docsearch:language": "en",
    "og:url": "https://DragSelect.com/docs/API/Events",
    "scrapeId": "8bd8d3d2-d8b2-44a9-853b-b16f3847b550",
    "sourceURL": "https://dragselect.com/docs/API/Events",
    "url": "https://dragselect.com/docs/API/Events",
    "statusCode": 200,
    "contentType": "text/html; charset=utf-8",
    "proxyUsed": "basic"
  },
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\" class=\"docs-wrapper docs-doc-page docs-version-current plugin-docs plugin-id-default docs-doc-id-API/Events\" data-has-hydrated=\"true\" data-theme=\"light\" data-rh=\"lang,dir,class,data-has-hydrated\">\n<body class=\"navigation-with-keyboard\" data-rh=\"class\" style=\"overflow: visible;\">\n<div id=\"__docusaurus\"><div role=\"region\" aria-label=\"Skip to main content\"><a class=\"skipToContent_oPtH\" href=\"https://dragselect.com/docs/API/Events#__docusaurus_skipToContent_fallback\">Skip to main content</a></div><div id=\"__docusaurus_skipToContent_fallback\" class=\"main-wrapper mainWrapper_MB5r docsWrapper_ct1J\"><button aria-label=\"Scroll back to top\" class=\"clean-btn theme-back-to-top-button backToTopButton_iEvu\" type=\"button\"></button><div class=\"docPage_KLoz\"><main class=\"docMainContainer_sTIZ\"><div class=\"container padding-top--md padding-bottom--lg\"><div class=\"row\"><div class=\"col docItemCol_Qr34\"><div class=\"docItemContainer_tjFy\"><article><div class=\"tocCollapsible_wXna theme-doc-toc-mobile tocMobile_Ojys\"><button type=\"button\" class=\"clean-btn tocCollapsibleButton_iI2p\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><h1>Events (Pub/sub)</h1><p>DragSelect follows a PubSub pattern. It will emit useful events you can subscribe to like this:</p><div class=\"language-js codeBlockContainer_mQmQ theme-code-block\" style=\"--prism-color: #bfc7d5; --prism-background-color: #292d3e;\"><div class=\"codeBlockContent_D5yF\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_RMoD thin-scrollbar\"><code class=\"codeBlockLines_AclH\"><span class=\"token-line\" style=\"color: rgb(191, 199, 213);\"><span class=\"token keyword\" style=\"font-style: italic;\">const</span><span class=\"token plain\"> ds </span><span class=\"token operator\" style=\"color: rgb(137, 221, 255);\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style: italic;\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color: rgb(255, 203, 107);\">DragSelect</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">(</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">{</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">}</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">)</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color: rgb(191, 199, 213);\"><span class=\"token plain\">ds</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">.</span><span class=\"token method function property-access\" style=\"color: rgb(130, 170, 255);\">subscribe</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">(</span><span class=\"token string\" style=\"color: rgb(195, 232, 141);\">'&lt;event_name&gt;'</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">(</span><span class=\"token parameter\">callback_object</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color: rgb(137, 221, 255);\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">{</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">}</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">)</span><br></span></code></pre><div class=\"buttonGroup_aaMX\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_z5j7\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_FoOz\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_L0B6\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_JmGV\" id=\"public-events\">Public Events<a href=\"https://dragselect.com/docs/API/Events#public-events\" class=\"hash-link\" aria-label=\"Direct link to Public Events\" title=\"Direct link to Public Events\">​</a></h2><table><thead><tr><th>event_name</th><th>callback_object</th><th>description</th></tr></thead><tbody><tr><td><code>DS:end</code></td><td>{ items, event, isDragging, isDraggingKeyboard, dropTarget, … }</td><td>Fired after the selection (i.e. on mouse-up).</td></tr><tr><td><code>DS:start</code></td><td>{ items, event, isDragging, isDraggingKeyboard, … }</td><td>Fired when the selection starts (i.e. on mouse-down).</td></tr><tr><td><code>DS:update</code></td><td>{ items, event, isDragging, isDraggingKeyboard, … }</td><td>Fired when the mouse moves while dragging (i.e. on mouse-move).</td></tr><tr><td><code>DS:scroll</code></td><td>{ items, isDragging, scroll_directions, scroll_multiplier, … }</td><td>Fired when the area is auto-scrolled (i.e. cursor on a corner of the area).</td></tr><tr><td><code>DS:select</code></td><td>{ items, item, isDragging, …}</td><td>Fired when an element is added to the selection.</td></tr><tr><td><code>DS:unselect</code></td><td>{ items, item, isDragging, … }</td><td>Fired when an element is removed from the selection.</td></tr><tr><td><code>DS:added</code></td><td>{ items, item, isDragging, … }</td><td>Fired when an element is added from the list of selectable elements.</td></tr><tr><td><code>DS:removed</code></td><td>{ items, item, isDragging, … }</td><td>Fired when an element is removed from the list of selectable elements.</td></tr></tbody></table><blockquote><p>Note: all your callbacks subscribers will run after the internal code ran. If you want to run something before everything else, use the <code>:pre</code> postfix. I.e. <code>DS:start:pre</code> is an event that runs before any internal start logic.</p></blockquote><blockquote><p>Note: there are way more so called \"internal events\" but hooking to those is not recommended since they might change in future and break your implementation.</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_JmGV\" id=\"callback-object\">Callback Object<a href=\"https://dragselect.com/docs/API/Events#callback-object\" class=\"hash-link\" aria-label=\"Direct link to Callback Object\" title=\"Direct link to Callback Object\">​</a></h2><p>The callback object is made up of different parts depending of the event. All properties are not guaranteed so it is important to check for their availability before using them. I.e. like this:</p><div class=\"language-js codeBlockContainer_mQmQ theme-code-block\" style=\"--prism-color: #bfc7d5; --prism-background-color: #292d3e;\"><div class=\"codeBlockContent_D5yF\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_RMoD thin-scrollbar\"><code class=\"codeBlockLines_AclH\"><span class=\"token-line\" style=\"color: rgb(191, 199, 213);\"><span class=\"token keyword\" style=\"font-style: italic;\">const</span><span class=\"token plain\"> ds </span><span class=\"token operator\" style=\"color: rgb(137, 221, 255);\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style: italic;\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color: rgb(255, 203, 107);\">DragSelect</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">(</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">{</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">}</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">)</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color: rgb(191, 199, 213);\"><span class=\"token plain\">ds</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">.</span><span class=\"token method function property-access\" style=\"color: rgb(130, 170, 255);\">subscribe</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">(</span><span class=\"token string\" style=\"color: rgb(195, 232, 141);\">'DS:end'</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">(</span><span class=\"token parameter\">callback_object</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color: rgb(137, 221, 255);\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color: rgb(191, 199, 213);\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"font-style: italic;\">if</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">(</span><span class=\"token plain\">callback_object</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">.</span><span class=\"token property-access\">items</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color: rgb(191, 199, 213);\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color: rgb(105, 112, 152); font-style: italic;\">// do something with the items</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color: rgb(191, 199, 213);\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color: rgb(191, 199, 213);\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">}</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">)</span><br></span></code></pre><div class=\"buttonGroup_aaMX\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_z5j7\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_FoOz\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_L0B6\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><table><thead><tr><th>callback_object_keys</th><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>event</code></td><td>MouseEvent <!-- -->|<!-- --> TouchEvent <!-- -->|<!-- --> KeyboardEvent <!-- -->|<!-- --> any</td><td>The native browser event, the type is depending on the situational context</td></tr><tr><td><code>items</code></td><td>[ HTMLElement <!-- -->|<!-- --> SVGElement <!-- -->|<!-- --> any ]</td><td>Current selected elements</td></tr><tr><td><code>item</code></td><td>HTMLElement <!-- -->|<!-- --> SVGElement <!-- -->|<!-- --> any</td><td>The single element currently being interacted with if any</td></tr><tr><td><code>isDragging</code></td><td>boolean</td><td>If true, the user is dragging the selected elements, if false the user is selecting</td></tr><tr><td><code>isDraggingKeyboard</code></td><td>boolean</td><td>If true, the user is dragging the selected elements with the keyboard</td></tr><tr><td><code>scroll_directions</code></td><td>[ 'top' <!-- -->|<!-- --> 'bottom' <!-- -->|<!-- --> 'left' <!-- -->|<!-- --> 'right' <!-- -->|<!-- --> undefined ]</td><td>The direction in which the event is happening (i.e. scroll direction)</td></tr><tr><td><code>scroll_multiplier</code></td><td>number</td><td>The scrolling speed</td></tr><tr><td><code>dropTarget</code></td><td>{ <br>&nbsp;<!-- -->&nbsp;<code>id</code>: string,<br>&nbsp;<!-- -->&nbsp;<code>element</code>: HTMLElement <!-- -->|<!-- --> SVGElement <!-- -->|<!-- --> any,<br>&nbsp;<!-- -->&nbsp;<code>droppables</code>: <!-- -->[ HTMLElement <!-- -->|<!-- --> SVGElement <!-- -->|<!-- --> any ]<!-- -->,<br>&nbsp;<!-- -->&nbsp;<code>itemsDropped</code>: <!-- -->[ HTMLElement <!-- -->|<!-- --> SVGElement <!-- -->|<!-- --> any ]<!-- -->,<br>&nbsp;<!-- -->&nbsp;<code>itemsInside</code>: <!-- -->[ HTMLElement <!-- -->|<!-- --> SVGElement <!-- -->|<!-- --> * ]<!-- --> <br>}</td><td>dropZone in which the droppable elements were dropped into. <code>id</code>: is the identifier string of the zone. <code>droppables</code>: the elements that are assigned to this zone. <code>itemsDropped</code>: all items that were dropped on the target. <code>itemsInside</code>: all items that are within the bounds of the zone</td></tr><tr><td><code>key</code></td><td>string</td><td>Pressed key (lowercase)</td></tr><tr><td><code>settings</code></td><td><a href=\"https://dragselect.com/docs/API/Settings\">Settings</a></td><td>The settings being updates/manipulated/passed, also holds the previous value. i.e. updating selectorClass will publish { settings: { selectorClass: 'newVal', 'selectorClass:pre': 'oldVal' } }</td></tr></tbody></table><blockquote><p>Note: all object keys are optional and might not be available, depending on the event type. So make sure to check for availability first</p></blockquote></div></article></div></div><div class=\"col col--3\"><div class=\"tableOfContents_XG6w thin-scrollbar theme-doc-toc-desktop\"><ul class=\"table-of-contents table-of-contents__left-border\"><li><a href=\"https://dragselect.com/docs/API/Events#public-events\" class=\"table-of-contents__link toc-highlight table-of-contents__link--active\">Public Events</a></li><li><a href=\"https://dragselect.com/docs/API/Events#callback-object\" class=\"table-of-contents__link toc-highlight\">Callback Object</a></li></ul></div></div></div></div></main></div></div></div>\n\n\n\n</body></html>"
}