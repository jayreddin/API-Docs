{
  "markdown": "[Skip to main content](https://dragselect.com/docs/API/Methods#__docusaurus_skipToContent_fallback)\n\nOn this page\n\n# Methods\n\nDragSelect exposes some useful methods.\nWhen the function is saved into a variable `const ds = new DragSelect()` you have access to all its inner functions. You can simply use them like this:\n\n```codeBlockLines_AclH\nconst ds = new DragSelect({});\nds.methodName(method_props);\n\n```\n\n## Methods [​](https://dragselect.com/docs/API/Methods\\#methods-1 \"Direct link to Methods\")\n\n### Functionality [​](https://dragselect.com/docs/API/Methods\\#functionality \"Direct link to Functionality\")\n\n| method | properties | usage |\n| --- | --- | --- |\n| `stop` | / | Will teardown/stop the whole functionality |\n| `start` | / | Reset the functionality after a stop/teardown |\n| `break` | / | Utility to override DragSelect internal functionality. Breaks out of current flow. Read [Custom Drag and Drop](https://dragselect.com/docs/guided-examples/CustomDnD) for more info. |\n\n### Pub/Sub [​](https://dragselect.com/docs/API/Methods\\#pubsub \"Direct link to Pub/Sub\")\n\n| method | properties | usage |\n| --- | --- | --- |\n| `subscribe` | (event\\_name, callback:(callback\\_object) => void):number | Subscribes to an event, see the [Events API](https://dragselect.com/docs/API/Events) for infos on the names and callback\\_object. |\n| `unsubscribe` | (event\\_name, callback, id) | Unsubscribes from an event, either pass the exact same callback method as when subscribing or the ID which is returned from the subscribe method |\n| `publish` | (event\\_name, callback\\_object:any) | Publishes an event, see the [Events API](https://dragselect.com/docs/API/Events) for infos on the names and callback\\_object. |\n\nRead the [Events API](https://dragselect.com/docs/API/Events) for more information\n\n### Settings [​](https://dragselect.com/docs/API/Methods\\#settings \"Direct link to Settings\")\n\n| method | properties | usage |\n| --- | --- | --- |\n| `setSettings` | [Settings](https://dragselect.com/docs/API/Settings) | Update any setting dynamically, see [Updating Settings](https://dragselect.com/docs/guided-examples/Updating-Settings) |\n\n### Interaction [​](https://dragselect.com/docs/API/Methods\\#interaction \"Direct link to Interaction\")\n\n| method | properties | usage |\n| --- | --- | --- |\n| `isDragging` | / | Whether the user is currently drag n dropping elements (instead of selection) |\n| `isMultiSelect` | event:KeyboardEvent | MouseEvent |\n\n### Selection [​](https://dragselect.com/docs/API/Methods\\#selection \"Direct link to Selection\")\n\n| method | properties | usage |\n| --- | --- | --- |\n| `getSelection` | / | Returns all currently selected nodes |\n| `addSelection` | elements:\\[HTMLElement \\| SVGElement\\]\\| HTMLElement \\| SVGElement, triggerCallback:boolean, dontAddToSelectables:boolean | adds one or multiple elements to the selection. If boolean is set to true: callback will be called afterwards. Adds them to the selectables if they're not yet in the set (can be turned off by setting the last boolean to true) |\n| `removeSelection` | elements:\\[HTMLElement \\| SVGElement\\]\\| HTMLElement \\| SVGElement, triggerCallback:boolean, removeFromSelectables:boolean | removes one or multiple elements to the selection. If boolean is set to true: callback will be called afterwards. If last boolean is set to true, it also removes them from the possible selectable nodes if they were. |\n| `toggleSelection` | elements:\\[HTMLElement \\| SVGElement\\]\\| HTMLElement \\| SVGElement, triggerCallback:boolean, removeFromSelectables:boolean | toggles one or multiple elements to the selection. If element is not in selection it will be added, if it is already selected, it will be removed. If `triggerCallback` is set to true: callback will be called afterward. If `removeFromSelectables` is set to true: will NOT add elements to the list of selectable elements but will remove elements from the selectables if they are toggled off. (By default the toggling will add elements to the list of selectables and will not remove them). |\n| `setSelection` | elements:\\[HTMLElement \\| SVGElement\\]\\| HTMLElement \\| SVGElement, triggerCallback:boolean, dontAddToSelectables:boolean | sets the selection to one or multiple elements. If boolean is set to true: callback will be called afterwards. Adds them to the selectables if they're not yet in the set (can be turned off by setting the last boolean to true) |\n| `clearSelection` | elements:\\[HTMLElement \\| SVGElement\\]\\| HTMLElement \\| SVGElement, triggerCallback:boolean | Removes all elements from the selection. If callback is set to true: callback will be called afterwards. |\n| `clearSelection` | triggerCallback:boolean | Unselect / Deselect all current selected Nodes |\n\n### Selectables [​](https://dragselect.com/docs/API/Methods\\#selectables \"Direct link to Selectables\")\n\n| method | properties | usage |\n| --- | --- | --- |\n| `addSelectables` | elements:\\[HTMLElement \\| SVGElement\\]\\| HTMLElement \\| SVGElement, addToSelection:boolean | Adds elements that can be selected. Don’t worry, nodes are never added twice. `addToSelection`: elements will also be added to current selection. |\n| `removeSelectables` | elements:\\[HTMLElement \\| SVGElement\\]\\| HTMLElement \\| SVGElement, removeFromSelection:boolean | Remove elements from the set of elements that can be selected. `removeFromSelection`: elements will also be removed from current selection. |\n| `getSelectables` | / | Returns array with all nodes that can be selected. |\n\n### Pointer [​](https://dragselect.com/docs/API/Methods\\#pointer \"Direct link to Pointer\")\n\n| method | properties | usage |\n| --- | --- | --- |\n| `getInitialCursorPosition` | / | Returns the registered x, y coordinates the cursor had when first clicked |\n| `getCurrentCursorPosition` | / | Returns current x, y coordinates of the cursor |\n| `getPreviousCursorPosition` | / | Returns last registered x, y coordinates of the cursor (after last end callback) |\n| `getInitialCursorPositionArea` | / | Returns the registered x, y coordinates relative to the area the cursor had when first clicked |\n| `getCurrentCursorPositionArea` | / | Returns current x, y coordinates of the cursor relative to the area |\n| `getPreviousCursorPositionArea` | / | Returns last registered x, y coordinates of the cursor relative to the area (after last end callback) |\n\n### DropZones [​](https://dragselect.com/docs/API/Methods\\#dropzones \"Direct link to DropZones\")\n\n| method | properties | usage |\n| --- | --- | --- |\n| `getZoneByCoordinates` | coordinates:{ x:number, y:number } (Optional) | Returns the first drop target under the current mouse position, or, if provided at the coordinates. |\n| `getItemsDroppedByZoneId` | zoneId:string | Returns the items dropped into a specific zone (by zone.id) |\n| `getItemsInsideByZoneId` | zoneId:string, addClasses:boolean | Returns the items that are visually inside a specific zone (by zone.id). `addClasses`: also add the [respective CSS classes](https://dragselect.com/docs/API/CSS-Classes) to those elements if they don’t have them yet. |\n\n## Example [​](https://dragselect.com/docs/API/Methods\\#example \"Direct link to Example\")\n\n```codeBlockLines_AclH\nconst ds = new DragSelect({});\nds.setSettings({ selectables: document.querySelectorAll('.selectable') });\nds.getSelection();\n\n```\n\n- [Methods](https://dragselect.com/docs/API/Methods#methods-1)\n  - [Functionality](https://dragselect.com/docs/API/Methods#functionality)\n  - [Pub/Sub](https://dragselect.com/docs/API/Methods#pubsub)\n  - [Settings](https://dragselect.com/docs/API/Methods#settings)\n  - [Interaction](https://dragselect.com/docs/API/Methods#interaction)\n  - [Selection](https://dragselect.com/docs/API/Methods#selection)\n  - [Selectables](https://dragselect.com/docs/API/Methods#selectables)\n  - [Pointer](https://dragselect.com/docs/API/Methods#pointer)\n  - [DropZones](https://dragselect.com/docs/API/Methods#dropzones)\n- [Example](https://dragselect.com/docs/API/Methods#example)",
  "screenshot": "https://service.firecrawl.dev/storage/v1/object/public/media/screenshot-21e13be9-4cb2-4e3b-8890-3b3f4fac3800.png",
  "metadata": {
    "og:url": "https://DragSelect.com/docs/API/Methods",
    "generator": "Docusaurus v2.4.3",
    "docusaurus_tag": "docs-default-current",
    "favicon": "https://dragselect.com/img/favicon.ico",
    "language": "en",
    "docsearch:version": "current",
    "og:description": "DragSelect Methods (API)",
    "viewport": "width=device-width, initial-scale=1.0",
    "twitter:card": "summary_large_image",
    "twitter:image": "https://DragSelect.com/img/dragselect-logo-bg.png",
    "description": "DragSelect Methods (API)",
    "keywords": "javascript, npm, drag-and-drop, drag, selection, dragselect, drag-n-drop, drag-selection, drag-select, drag-selection library, open source, free",
    "ogImage": "https://DragSelect.com/img/dragselect-logo-bg.png",
    "og:image": "https://DragSelect.com/img/dragselect-logo-bg.png",
    "docusaurus_locale": "en",
    "og:title": "Methods | DragSelect",
    "docsearch:language": "en",
    "ogDescription": "DragSelect Methods (API)",
    "author": "Thibault Jan Beyer",
    "position": [
      "1",
      "2"
    ],
    "title": "Methods | DragSelect",
    "docsearch:docusaurus_tag": "docs-default-current",
    "ogTitle": "Methods | DragSelect",
    "docusaurus_version": "current",
    "ogUrl": "https://DragSelect.com/docs/API/Methods",
    "scrapeId": "7c20f91c-70de-4f31-99b0-bf56f323c2ea",
    "sourceURL": "https://dragselect.com/docs/API/Methods",
    "url": "https://dragselect.com/docs/API/Methods",
    "statusCode": 200,
    "contentType": "text/html; charset=utf-8",
    "proxyUsed": "basic"
  },
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\" class=\"docs-wrapper docs-doc-page docs-version-current plugin-docs plugin-id-default docs-doc-id-API/Methods\" data-has-hydrated=\"true\" data-theme=\"light\" data-rh=\"lang,dir,class,data-has-hydrated\">\n<body class=\"navigation-with-keyboard\" data-rh=\"class\" style=\"overflow: visible;\">\n<div id=\"__docusaurus\"><div role=\"region\" aria-label=\"Skip to main content\"><a class=\"skipToContent_oPtH\" href=\"https://dragselect.com/docs/API/Methods#__docusaurus_skipToContent_fallback\">Skip to main content</a></div><div id=\"__docusaurus_skipToContent_fallback\" class=\"main-wrapper mainWrapper_MB5r docsWrapper_ct1J\"><button aria-label=\"Scroll back to top\" class=\"clean-btn theme-back-to-top-button backToTopButton_iEvu\" type=\"button\"></button><div class=\"docPage_KLoz\"><main class=\"docMainContainer_sTIZ\"><div class=\"container padding-top--md padding-bottom--lg\"><div class=\"row\"><div class=\"col docItemCol_Qr34\"><div class=\"docItemContainer_tjFy\"><article><div class=\"tocCollapsible_wXna theme-doc-toc-mobile tocMobile_Ojys\"><button type=\"button\" class=\"clean-btn tocCollapsibleButton_iI2p\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><h1>Methods</h1><p>DragSelect exposes some useful methods.\nWhen the function is saved into a variable <code>const ds = new DragSelect()</code> you have access to all its inner functions. You can simply use them like this:</p><div class=\"language-js codeBlockContainer_mQmQ theme-code-block\" style=\"--prism-color: #bfc7d5; --prism-background-color: #292d3e;\"><div class=\"codeBlockContent_D5yF\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_RMoD thin-scrollbar\"><code class=\"codeBlockLines_AclH\"><span class=\"token-line\" style=\"color: rgb(191, 199, 213);\"><span class=\"token keyword\" style=\"font-style: italic;\">const</span><span class=\"token plain\"> ds </span><span class=\"token operator\" style=\"color: rgb(137, 221, 255);\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style: italic;\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color: rgb(255, 203, 107);\">DragSelect</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">(</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">{</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">}</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">)</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color: rgb(191, 199, 213);\"><span class=\"token plain\">ds</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">.</span><span class=\"token method function property-access\" style=\"color: rgb(130, 170, 255);\">methodName</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">(</span><span class=\"token plain\">method_props</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">)</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">;</span><br></span></code></pre><div class=\"buttonGroup_aaMX\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_z5j7\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_FoOz\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_L0B6\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_JmGV\" id=\"methods-1\">Methods<a href=\"https://dragselect.com/docs/API/Methods#methods-1\" class=\"hash-link\" aria-label=\"Direct link to Methods\" title=\"Direct link to Methods\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_JmGV\" id=\"functionality\">Functionality<a href=\"https://dragselect.com/docs/API/Methods#functionality\" class=\"hash-link\" aria-label=\"Direct link to Functionality\" title=\"Direct link to Functionality\">​</a></h3><table><thead><tr><th>method</th><th>properties</th><th>usage</th></tr></thead><tbody><tr><td><code>stop</code></td><td>/</td><td>Will teardown/stop the whole functionality</td></tr><tr><td><code>start</code></td><td>/</td><td>Reset the functionality after a stop/teardown</td></tr><tr><td><code>break</code></td><td>/</td><td>Utility to override DragSelect internal functionality. Breaks out of current flow. Read <a href=\"https://dragselect.com/docs/guided-examples/CustomDnD\">Custom Drag and Drop</a> for more info.</td></tr></tbody></table><h3 class=\"anchor anchorWithStickyNavbar_JmGV\" id=\"pubsub\">Pub/Sub<a href=\"https://dragselect.com/docs/API/Methods#pubsub\" class=\"hash-link\" aria-label=\"Direct link to Pub/Sub\" title=\"Direct link to Pub/Sub\">​</a></h3><table><thead><tr><th>method</th><th>properties</th><th>usage</th></tr></thead><tbody><tr><td><code>subscribe</code></td><td>(event_name, callback:(callback_object) =&gt; void):number</td><td>Subscribes to an event, see the <a href=\"https://dragselect.com/docs/API/Events\">Events API</a> for infos on the names and callback_object.</td></tr><tr><td><code>unsubscribe</code></td><td>(event_name, callback, id)</td><td>Unsubscribes from an event, either pass the exact same callback method as when subscribing or the ID which is returned from the subscribe method</td></tr><tr><td><code>publish</code></td><td>(event_name, callback_object:any)</td><td>Publishes an event, see the <a href=\"https://dragselect.com/docs/API/Events\">Events API</a> for infos on the names and callback_object.</td></tr></tbody></table><p>Read the <a href=\"https://dragselect.com/docs/API/Events\">Events API</a> for more information</p><h3 class=\"anchor anchorWithStickyNavbar_JmGV\" id=\"settings\">Settings<a href=\"https://dragselect.com/docs/API/Methods#settings\" class=\"hash-link\" aria-label=\"Direct link to Settings\" title=\"Direct link to Settings\">​</a></h3><table><thead><tr><th>method</th><th>properties</th><th>usage</th></tr></thead><tbody><tr><td><code>setSettings</code></td><td><a href=\"https://dragselect.com/docs/API/Settings\">Settings</a></td><td>Update any setting dynamically, see <a href=\"https://dragselect.com/docs/guided-examples/Updating-Settings\">Updating Settings</a></td></tr></tbody></table><h3 class=\"anchor anchorWithStickyNavbar_JmGV\" id=\"interaction\">Interaction<a href=\"https://dragselect.com/docs/API/Methods#interaction\" class=\"hash-link\" aria-label=\"Direct link to Interaction\" title=\"Direct link to Interaction\">​</a></h3><table><thead><tr><th>method</th><th>properties</th><th>usage</th></tr></thead><tbody><tr><td><code>isDragging</code></td><td>/</td><td>Whether the user is currently drag n dropping elements (instead of selection)</td></tr><tr><td><code>isMultiSelect</code></td><td>event:KeyboardEvent</td><td>MouseEvent</td></tr></tbody></table><h3 class=\"anchor anchorWithStickyNavbar_JmGV\" id=\"selection\">Selection<a href=\"https://dragselect.com/docs/API/Methods#selection\" class=\"hash-link\" aria-label=\"Direct link to Selection\" title=\"Direct link to Selection\">​</a></h3><table><thead><tr><th>method</th><th>properties</th><th>usage</th></tr></thead><tbody><tr><td><code>getSelection</code></td><td>/</td><td>Returns all currently selected nodes</td></tr><tr><td><code>addSelection</code></td><td>elements:<!-- -->[HTMLElement <!-- -->|<!-- --> SVGElement]<!-- --> <!-- -->|<!-- --> HTMLElement <!-- -->|<!-- --> SVGElement, triggerCallback:boolean, dontAddToSelectables:boolean</td><td>adds one or multiple elements to the selection. If boolean is set to true: callback will be called afterwards. Adds them to the selectables if they're not yet in the set (can be turned off by setting the last boolean to true)</td></tr><tr><td><code>removeSelection</code></td><td>elements:<!-- -->[HTMLElement <!-- -->|<!-- --> SVGElement]<!-- --> <!-- -->|<!-- --> HTMLElement <!-- -->|<!-- --> SVGElement, triggerCallback:boolean, removeFromSelectables:boolean</td><td>removes one or multiple elements to the selection. If boolean is set to true: callback will be called afterwards. If last boolean is set to true, it also removes them from the possible selectable nodes if they were.</td></tr><tr><td><code>toggleSelection</code></td><td>elements:<!-- -->[HTMLElement <!-- -->|<!-- --> SVGElement]<!-- --> <!-- -->|<!-- --> HTMLElement <!-- -->|<!-- --> SVGElement, triggerCallback:boolean, removeFromSelectables:boolean</td><td>toggles one or multiple elements to the selection. If element is not in selection it will be added, if it is already selected, it will be removed. If <code>triggerCallback</code> is set to true: callback will be called afterward. If <code>removeFromSelectables</code> is set to true: will NOT add elements to the list of selectable elements but will remove elements from the selectables if they are toggled off. (By default the toggling will add elements to the list of selectables and will not remove them).</td></tr><tr><td><code>setSelection</code></td><td>elements:<!-- -->[HTMLElement <!-- -->|<!-- --> SVGElement]<!-- --> <!-- -->|<!-- --> HTMLElement <!-- -->|<!-- --> SVGElement, triggerCallback:boolean, dontAddToSelectables:boolean</td><td>sets the selection to one or multiple elements. If boolean is set to true: callback will be called afterwards. Adds them to the selectables if they're not yet in the set (can be turned off by setting the last boolean to true)</td></tr><tr><td><code>clearSelection</code></td><td>elements:<!-- -->[HTMLElement <!-- -->|<!-- --> SVGElement]<!-- --> <!-- -->|<!-- --> HTMLElement <!-- -->|<!-- --> SVGElement, triggerCallback:boolean</td><td>Removes all elements from the selection. If callback is set to true: callback will be called afterwards.</td></tr><tr><td><code>clearSelection</code></td><td>triggerCallback:boolean</td><td>Unselect / Deselect all current selected Nodes</td></tr></tbody></table><h3 class=\"anchor anchorWithStickyNavbar_JmGV\" id=\"selectables\">Selectables<a href=\"https://dragselect.com/docs/API/Methods#selectables\" class=\"hash-link\" aria-label=\"Direct link to Selectables\" title=\"Direct link to Selectables\">​</a></h3><table><thead><tr><th>method</th><th>properties</th><th>usage</th></tr></thead><tbody><tr><td><code>addSelectables</code></td><td>elements:<!-- -->[HTMLElement <!-- -->|<!-- --> SVGElement]<!-- --> <!-- -->|<!-- --> HTMLElement <!-- -->|<!-- --> SVGElement, addToSelection:boolean</td><td>Adds elements that can be selected. Don’t worry, nodes are never added twice. <code>addToSelection</code>: elements will also be added to current selection.</td></tr><tr><td><code>removeSelectables</code></td><td>elements:<!-- -->[HTMLElement <!-- -->|<!-- --> SVGElement]<!-- --> <!-- -->|<!-- --> HTMLElement <!-- -->|<!-- --> SVGElement, removeFromSelection:boolean</td><td>Remove elements from the set of elements that can be selected. <code>removeFromSelection</code>: elements will also be removed from current selection.</td></tr><tr><td><code>getSelectables</code></td><td>/</td><td>Returns array with all nodes that can be selected.</td></tr></tbody></table><h3 class=\"anchor anchorWithStickyNavbar_JmGV\" id=\"pointer\">Pointer<a href=\"https://dragselect.com/docs/API/Methods#pointer\" class=\"hash-link\" aria-label=\"Direct link to Pointer\" title=\"Direct link to Pointer\">​</a></h3><table><thead><tr><th>method</th><th>properties</th><th>usage</th></tr></thead><tbody><tr><td><code>getInitialCursorPosition</code></td><td>/</td><td>Returns the registered x, y coordinates the cursor had when first clicked</td></tr><tr><td><code>getCurrentCursorPosition</code></td><td>/</td><td>Returns current x, y coordinates of the cursor</td></tr><tr><td><code>getPreviousCursorPosition</code></td><td>/</td><td>Returns last registered x, y coordinates of the cursor (after last end callback)</td></tr><tr><td><code>getInitialCursorPositionArea</code></td><td>/</td><td>Returns the registered x, y coordinates relative to the area the cursor had when first clicked</td></tr><tr><td><code>getCurrentCursorPositionArea</code></td><td>/</td><td>Returns current x, y coordinates of the cursor relative to the area</td></tr><tr><td><code>getPreviousCursorPositionArea</code></td><td>/</td><td>Returns last registered x, y coordinates of the cursor relative to the area (after last end callback)</td></tr></tbody></table><h3 class=\"anchor anchorWithStickyNavbar_JmGV\" id=\"dropzones\">DropZones<a href=\"https://dragselect.com/docs/API/Methods#dropzones\" class=\"hash-link\" aria-label=\"Direct link to DropZones\" title=\"Direct link to DropZones\">​</a></h3><table><thead><tr><th>method</th><th>properties</th><th>usage</th></tr></thead><tbody><tr><td><code>getZoneByCoordinates</code></td><td>coordinates:{ x:number, y:number } (Optional)</td><td>Returns the first drop target under the current mouse position, or, if provided at the coordinates.</td></tr><tr><td><code>getItemsDroppedByZoneId</code></td><td>zoneId:string</td><td>Returns the items dropped into a specific zone (by zone.id)</td></tr><tr><td><code>getItemsInsideByZoneId</code></td><td>zoneId:string, addClasses:boolean</td><td>Returns the items that are visually inside a specific zone (by zone.id). <code>addClasses</code>: also add the <a href=\"https://dragselect.com/docs/API/CSS-Classes\">respective CSS classes</a> to those elements if they don’t have them yet.</td></tr></tbody></table><h2 class=\"anchor anchorWithStickyNavbar_JmGV\" id=\"example\">Example<a href=\"https://dragselect.com/docs/API/Methods#example\" class=\"hash-link\" aria-label=\"Direct link to Example\" title=\"Direct link to Example\">​</a></h2><div class=\"language-js codeBlockContainer_mQmQ theme-code-block\" style=\"--prism-color: #bfc7d5; --prism-background-color: #292d3e;\"><div class=\"codeBlockContent_D5yF\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_RMoD thin-scrollbar\"><code class=\"codeBlockLines_AclH\"><span class=\"token-line\" style=\"color: rgb(191, 199, 213);\"><span class=\"token keyword\" style=\"font-style: italic;\">const</span><span class=\"token plain\"> ds </span><span class=\"token operator\" style=\"color: rgb(137, 221, 255);\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style: italic;\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color: rgb(255, 203, 107);\">DragSelect</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">(</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">{</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">}</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">)</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color: rgb(191, 199, 213);\"><span class=\"token plain\">ds</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">.</span><span class=\"token method function property-access\" style=\"color: rgb(130, 170, 255);\">setSettings</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">(</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">selectables</span><span class=\"token operator\" style=\"color: rgb(137, 221, 255);\">:</span><span class=\"token plain\"> </span><span class=\"token dom variable\" style=\"color: rgb(191, 199, 213);\">document</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">.</span><span class=\"token method function property-access\" style=\"color: rgb(130, 170, 255);\">querySelectorAll</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">(</span><span class=\"token string\" style=\"color: rgb(195, 232, 141);\">'.selectable'</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">}</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">)</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color: rgb(191, 199, 213);\"><span class=\"token plain\">ds</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">.</span><span class=\"token method function property-access\" style=\"color: rgb(130, 170, 255);\">getSelection</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">(</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">)</span><span class=\"token punctuation\" style=\"color: rgb(199, 146, 234);\">;</span><br></span></code></pre><div class=\"buttonGroup_aaMX\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_z5j7\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_FoOz\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_L0B6\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div></div></article></div></div><div class=\"col col--3\"><div class=\"tableOfContents_XG6w thin-scrollbar theme-doc-toc-desktop\"><ul class=\"table-of-contents table-of-contents__left-border\"><li><a href=\"https://dragselect.com/docs/API/Methods#methods-1\" class=\"table-of-contents__link toc-highlight table-of-contents__link--active\">Methods</a><ul><li><a href=\"https://dragselect.com/docs/API/Methods#functionality\" class=\"table-of-contents__link toc-highlight\">Functionality</a></li><li><a href=\"https://dragselect.com/docs/API/Methods#pubsub\" class=\"table-of-contents__link toc-highlight\">Pub/Sub</a></li><li><a href=\"https://dragselect.com/docs/API/Methods#settings\" class=\"table-of-contents__link toc-highlight\">Settings</a></li><li><a href=\"https://dragselect.com/docs/API/Methods#interaction\" class=\"table-of-contents__link toc-highlight\">Interaction</a></li><li><a href=\"https://dragselect.com/docs/API/Methods#selection\" class=\"table-of-contents__link toc-highlight\">Selection</a></li><li><a href=\"https://dragselect.com/docs/API/Methods#selectables\" class=\"table-of-contents__link toc-highlight\">Selectables</a></li><li><a href=\"https://dragselect.com/docs/API/Methods#pointer\" class=\"table-of-contents__link toc-highlight\">Pointer</a></li><li><a href=\"https://dragselect.com/docs/API/Methods#dropzones\" class=\"table-of-contents__link toc-highlight\">DropZones</a></li></ul></li><li><a href=\"https://dragselect.com/docs/API/Methods#example\" class=\"table-of-contents__link toc-highlight\">Example</a></li></ul></div></div></div></div></main></div></div></div>\n\n\n\n</body></html>"
}